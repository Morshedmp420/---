module.exports.config = {
  name: "darona",
  version: "1.0.0",
  author: "SaGor",
  description: "ржХрзЗржЙ 'everyone' ржмрж╛ '@everyone' рж▓рж┐ржЦрж▓рзЗ рж╕ржмрж╛ржЗржХрзЗ mention ржХрж░рзЗ ржПржХржЯрж┐ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ",
  commandCategory: "group",
  cooldown: 10,
};

module.exports.run = async function ({ api, event }) {
  if (!event.isGroup) return api.sendMessage("тЭМ ржПржЗ ржХржорж╛ржирзНржб рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ!", event.threadID);

  const message = event.body.toLowerCase();
  if (message.includes("everyone") || message.includes("@everyone")) {
    try {
      const threadInfo = await new Promise((resolve, reject) => {
        api.getThreadInfo(event.threadID, (err, info) => {
          if (err) return reject(err);
          resolve(info);
        });
      });

      const participantIDs = threadInfo.participantIDs || [];
      if (participantIDs.length === 0) return api.sendMessage("тЪая╕П рж╕ржжрж╕рзНржпржжрзЗрж░ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!", event.threadID);

      const mentions = [];
      let mentionText = "";

      for (const id of participantIDs) {
        const userInfo = await new Promise((resolve, reject) => {
          api.getUserInfo(id, (err, data) => {
            if (err) return reject(err);
            resolve(data[id]);
          });
        });

        const name = userInfo.name || "ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржПрж░ ржзрж╛рж░ржгрж╛","ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржПрж░ ржЙржжрзНржжрзЗрж╢рзНржп","ржлрж╛ржЙржирзНржбрзЗрж╢ржи ржПрж░ ржХрж╛ржЬ";
        const tag = `@${name}`;
        mentionText += `${tag} `;
        mentions.push({ id, tag, fromIndex: mentionText.length - tag.length });
      }

      const finalMessage = {
        body: `ржЖрж╕рж╕рж╛рж▓рж╛ржорзБ ржЖрж▓рж╛ржЗржХрзБржо\n ржЖржорж╛ржжрзЗрж░ ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржХрж╛ржЬ рж╣рж▓ ржмрж╛ржВрж▓рж╛ржжрзЗрж╢рзЗрж░ ржпрзЗ ржХрзЛржи ржкрзНрж░рж╛ржирзНрждрзЗ ржпрзЗ ржХрзЛржи ржЬрж╛ржпрж╝ржЧрж╛ржпрж╝ ржорж╕ржЬрж┐ржжржХрзЗ рж╕рзБржирзНржжрж░ ржХрж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ ржПржмржВ ржХрж┐ ржПрждрж┐ржоржЦрж╛ржирж╛ржпрж╝ ржпрзЗрж╕ржм ржЫрзЗрж▓рзЗржорзЗржпрж╝рзЗржжрзЗрж░ ржЯрж╛ржХрж╛рж░ ржЬржирзНржп ржХрж┐ржЫрзБ ржХрж░рждрзЗ ржкрж╛рж░рзЗ ржирж╛ рждрж╛ржжрзЗрж░ржХрзЗ рж╕рж╣ржпрзЛржЧрж┐рждрж╛ ржХрж░рж╛ред\ ржЖржорж╛ржжрзЗрж░ ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржПржХржЯрж┐ рж╕ржлржЯржУржпрж╝рзНржпрж╛рж░ рж░ржпрж╝рзЗржЫрзЗ ржпрзЗржЯрж┐рж░ ржорж╛ржзрзНржпржорзЗ ржЖржорж░рж╛ ржкрзНрж░рждрзНржпрзЗржХ ржорж╛рж╕рзЗрж░ рж╣рж╛ржжрж┐ржпрж╝рж╛ ржПржмржВ ржХрж┐ рж╕ржХрж▓ ржХрж┐ржЫрзБ ржЖржкржбрзЗржЯ ржХрж░рзЗ ржерж╛ржХрж┐ ржпрзЗржи ржЖржорж╛ржжрзЗрж░ ржкрзНрж░рждрж┐ржЯрж┐ рж╕ржжрж╕рзНржпрж░ рж╕ржмржХрж┐ржЫрзБ ржЬрж╛ржирж╛ ржерж╛ржХрзЗ ржЖржкржирж┐ржУ ржЪрж╛ржЗрж▓рзЗ ржЖржорж╛ржжрзЗрж░ ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗ ржЖрж╕рждрзЗ ржкрж╛рж░рзЗржиЁЯлб\n ржЖрж╕рзБржи рж╕ржмрж╛ржЗ ржПржХрж╕рж╛ржерзЗ ржЗрж╕рж▓рж╛ржо ржкрзНрж░ржЪрж╛рж░ ржХрж░рзЗ ржПржмржВ ржЕрж╕рж╣рж╛ржпрж╝ ржорж╛ржирзБрж╖ржжрзЗрж░ ржкрж╛рж╢рзЗ ржжрж╛ржБржбрж╝рж╛ржЗ\n ржУржЗ ржпрзЗ ржмрж▓рзЗ ржирж╛ ржХрзНрж╖рзБржжрзНрж░ ржХрзНрж╖рзБржжрзНрж░ ржЬрж┐ржирж┐рж╕ ржерзЗржХрзЗ ржЕржирзЗржХ ржмржбрж╝ ржХрж┐ржЫрзБ ржХрж░рж╛ ржпрж╛ржпрж╝ рждрж╛ржЗ рж╕ржХрж▓рзЗрж░ рж╕рж╣ржпрзЛржЧрж┐рждрж╛ржпрж╝ ржПржнрж╛ржмрзЗ ржЖржорж░рж╛ ржорж╛ржирзБрж╖рзЗрж░ ржкрж╛рж╢рзЗ ржжрж╛ржБржбрж╝рж╛ржмрзЛ ржЗржирж╢рж╛ржЖрж▓рзНрж▓рж╛рж╣\n${mentionText}`,
        mentions: mentions
      };

      api.sendMessage(finalMessage, event.threadID);

    } catch (err) {
      console.error(err);
      api.sendMessage("тЪая╕П ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ!", event.threadID);
    }
  }
};
