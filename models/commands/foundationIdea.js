module.exports.config = {
  name: "foundationIdea",
  version: "1.0.0",
  author: "SaGor",
  description: "ржХрзЗржЙ ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржзрж╛рж░ржгрж╛ рж▓рж┐ржЦрж▓рзЗ рж╕ржмрж╛ржЗржХрзЗ mention ржХрж░рзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ",
  commandCategory: "group",
  cooldown: 30, // ржкрзНрж░рждрж┐ рзйрзж рж╕рзЗржХрзЗржирзНржбрзЗ ржПржХржмрж╛рж░ ржЯрзНрж░рж┐ржЧрж╛рж░ рж╣ржмрзЗ
};

module.exports.run = async function ({ api, event }) {
  // рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ
  if (!event.isGroup) return api.sendMessage("тЭМ ржПржЗ ржХржорж╛ржирзНржб рж╢рзБржзрзБ ржЧрзНрж░рзБржкрзЗ ржХрж╛ржЬ ржХрж░ржмрзЗ!", event.threadID);

  const text = event.body?.toLowerCase() || "";

  // ржлрж╛ржЙржирзНржбрзЗрж╢ржи рж╕ржорзНржкрж░рзНржХрж┐ржд рж╢ржмрзНржж ржЦрзЛржБржЬрж╛
  const keywords = ["ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржзрж╛рж░ржгрж╛", "foundation idea", "foundation", "foundation plan", "foundation purpose"];
  const matched = keywords.some(k => text.includes(k));
  if (!matched) return; // ржХрзАржУрзЯрж╛рж░рзНржб ржирж╛ ржерж╛ржХрж▓рзЗ ржХрж┐ржЫрзБ ржХрж░ржмрзЗ ржирж╛

  try {
    // ржерзНрж░рзЗржб ржЗржиржлрзЛ ржЖржирж╛
    const threadInfo = await new Promise((resolve, reject) => {
      api.getThreadInfo(event.threadID, (err, info) => {
        if (err) return reject(err);
        resolve(info);
      });
    });

    const participantIDs = threadInfo.participantIDs || [];
    if (participantIDs.length === 0) return api.sendMessage("тЪая╕П рж╕ржжрж╕рзНржпржжрзЗрж░ рждржерзНржп ржкрж╛ржУрзЯрж╛ ржпрж╛ржЪрзНржЫрзЗ ржирж╛!", event.threadID);

    // mention ржмрж╛ржирж╛ржирзЛ
    const mentions = [];
    let mentionText = "";

    for (const id of participantIDs) {
      const userInfo = await new Promise((resolve, reject) => {
        api.getUserInfo(id, (err, data) => {
          if (err) return reject(err);
          resolve(data[id]);
        });
      });
      const name = userInfo.name || "Member";
      const tag = `@${name}`;
      mentionText += `${tag} `;
      mentions.push({ id, tag, fromIndex: mentionText.length - tag.length });
    }

    // ржорзВрж▓ ржорзЗрж╕рзЗржЬ
    const message = `
ЁЯМ┐ *ржлрж╛ржЙржирзНржбрзЗрж╢ржирзЗрж░ ржзрж╛рж░ржгрж╛* ЁЯМ┐

"${event.body}"

ржПржЗ ржзрж╛рж░ржгрж╛ржЯрж┐ рж╕ржмрж╛рж░ ржЬржирзНржп ржЙржирзНржорзБржХрзНржд ржЖрж▓рзЛржЪржирж╛ред
ржЖржкржирж╛рж░ ржорждрж╛ржоржд ржЬрж╛ржирж╛рждрзЗ ржнрзБрж▓ржмрзЗржи ржирж╛ ЁЯТм

${mentionText}
    `;

    // ржкрж╛ржарж╛ржУ
    api.sendMessage({ body: message, mentions }, event.threadID);

  } catch (err) {
    console.error(err);
    api.sendMessage("тЪая╕П ржХрж┐ржЫрзБ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ! ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред", event.threadID);
  }
};
